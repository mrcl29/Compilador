
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package compiler.sintactic;

/** CUP generated interface containing symbol constants. */
public interface ParserSym {
  /* terminals */
  public static final int rtrn = 4;
  public static final int tuple = 17;
  public static final int lbracket = 35;
  public static final int if_t = 7;
  public static final int plus = 21;
  public static final int lbrace = 33;
  public static final int minus = 22;
  public static final int con = 6;
  public static final int rbrace = 34;
  public static final int logical = 19;
  public static final int for_t = 12;
  public static final int comma = 32;
  public static final int endfnct = 3;
  public static final int not_equal = 24;
  public static final int integer_literal = 37;
  public static final int equal = 23;
  public static final int endwhile = 11;
  public static final int EOF = 0;
  public static final int rbracket = 36;
  public static final int error = 1;
  public static final int val = 5;
  public static final int in = 15;
  public static final int or = 26;
  public static final int lparen = 27;
  public static final int colon = 29;
  public static final int endif = 9;
  public static final int fnct = 2;
  public static final int boolean_literal = 38;
  public static final int integer = 18;
  public static final int while_t = 10;
  public static final int id = 39;
  public static final int rparen = 28;
  public static final int double_colon = 30;
  public static final int out = 16;
  public static final int and = 25;
  public static final int endfor = 14;
  public static final int else_t = 8;
  public static final int assign = 20;
  public static final int semicolon = 31;
  public static final int to = 13;
  public static final String[] terminalNames = new String[] {
  "EOF",
  "error",
  "fnct",
  "endfnct",
  "rtrn",
  "val",
  "con",
  "if_t",
  "else_t",
  "endif",
  "while_t",
  "endwhile",
  "for_t",
  "to",
  "endfor",
  "in",
  "out",
  "tuple",
  "integer",
  "logical",
  "assign",
  "plus",
  "minus",
  "equal",
  "not_equal",
  "and",
  "or",
  "lparen",
  "rparen",
  "colon",
  "double_colon",
  "semicolon",
  "comma",
  "lbrace",
  "rbrace",
  "lbracket",
  "rbracket",
  "integer_literal",
  "boolean_literal",
  "id"
  };
}

