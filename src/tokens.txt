val
x
double_colon
integer
assign
5
semicolon
val
y
double_colon
integer
assign
10
semicolon
con
z
double_colon
integer
assign
15
semicolon
tuple
x
assign
lbrace
integer
comma
logical
rbrace
semicolon
fnct
integer
suma
lparen
zzzz
double_colon
integer
comma
dadfga
double_colon
logical
rparen
colon
val
a
double_colon
integer
assign
1
semicolon
val
b
double_colon
integer
assign
2
semicolon
val
res
double_colon
integer
assign
a
minus
b
semicolon
rtrn
lparen
res
rparen
semicolon
endfnct
val
result
double_colon
integer
assign
suma
lparen
rparen
semicolon
out
lparen
result
rparen
semicolon
if
lparen
TRUE
rparen
colon
out
lparen
1
equal
21
rparen
semicolon
else
colon
out
lparen
1
rparen
semicolon
endif
while
lparen
x
not_equal
20
rparen
colon
x
assign
x
plus
1
semicolon
endwhile
for
i
double_colon
integer
assign
0
to
10
colon
out
lparen
i
rparen
semicolon
endfor
val
dsadaa
double_colon
logical
assign
5
semicolon
val
bgfasgsf
double_colon
integer
assign
suma
lparen
x
comma
true
or
false
rparen
semicolon
if
lparen
true
and
1
equal
2
rparen
colon
out
lparen
true
rparen
semicolon
endif
x
lbracket
1
rbracket
assign
TRUE
semicolon
